
(define-relation (nevero x) (nevero x))
(define-relation (alwayso x)
  (conde ((== #t x))
         ((alwayso x))))
(define-relation (sometimeso x)
  (conde ((nevero x))
         ((alwayso x))))

(define-relation (color c)
  (conde ((== c 'red))
         ((== c 'green))
         ((== c 'blue))
         ((== c 'cyan))
         ((== c 'magenta))
         ((== c 'yellow))
         ((== c 'black))
         ((== c 'white))))
(define-relation (shape s)
  (conde ((== s 'circle))
         ((== s 'triangle))
         ((== s 'rectangle))
         ((== s 'pentagon))
         ((== s 'hexagon))))
(define-relation (shape-or-color sc)
  (conde ((shape sc)) ((color sc))))

(test 'sometimeso-0
  (run 5 (q) (sometimeso q))
  '((#t) (#t) (#t) (#t) (#t)))

(test 'choices-1
  (run 20 (sc) (shape-or-color sc))
  '((circle)
    (red)
    (triangle)
    (green)
    (rectangle)
    (blue)
    (pentagon)
    (cyan)
    (hexagon)
    (magenta)
    (yellow)
    (black)
    (white)))
(test 'choices-2
  (run 20 (s c) (shape s) (color c))
  '((circle red)
    (circle green)
    (triangle red)
    (circle blue)
    (triangle green)
    (circle cyan)
    (rectangle red)
    (circle magenta)
    (triangle blue)
    (circle yellow)
    (rectangle green)
    (circle black)
    (triangle cyan)
    (circle white)
    (triangle magenta)
    (pentagon red)
    (rectangle blue)
    (triangle yellow)
    (triangle black)
    (pentagon green)))

